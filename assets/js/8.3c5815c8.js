(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{60:function(t,n,s){"use strict";s.r(n);var a=s(0),o=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"js执行上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js执行上下文","aria-hidden":"true"}},[t._v("#")]),t._v(" js执行上下文")]),s("h2",{attrs:{id:"深入执行上下文-excution-context"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深入执行上下文-excution-context","aria-hidden":"true"}},[t._v("#")]),t._v(" 深入执行上下文(Excution Context)")]),s("p",[t._v("众所周知,每当我们调用一个方法的时候,都会创建一个新的"),s("code",[t._v("执行上下文")]),t._v(",\n在JavaScript解释器内部,每次创建"),s("code",[t._v("执行上下文")]),t._v("都需要两个阶段")]),s("ul",[s("li",[s("strong",[t._v("Creation Stage")]),t._v("创造阶段(发生在方法被调用但是未执行任何代码之前)\n"),s("ul",[s("li",[t._v("创建作用于链")]),s("li",[t._v("创建变量,方法,参数")]),s("li",[t._v("定义"),s("code",[t._v("this")]),t._v("的值")])])]),s("li",[s("strong",[t._v("Activation / Code Execution Stage")]),t._v("激活/代码执行阶段\n"),s("ul",[s("li",[t._v("赋值,引用函数,解释/执行代码")])])])]),s("p",[s("code",[t._v("执行上下文")]),t._v("在概念上类似于有3个属性的对象")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("executionContextObj "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token string"}},[t._v("'scopeChain'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("/* 变量对象 + 父对象的变量对象 */")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{attrs:{class:"token string"}},[t._v("'variableObject'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("/* 方法参数 / 内部变量 + 函数声明 */")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{attrs:{class:"token string"}},[t._v("'this'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("h2",{attrs:{id:"活动对象与变量对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#活动对象与变量对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 活动对象与变量对象")]),s("p",[t._v("上面提到的"),s("code",[t._v("executionContextObj")]),t._v(",是在方法被调用但是方法并未真正执行的时候创建的.即上面提到的"),s("code",[t._v("创造阶段")]),t._v(".\n在这个阶段,解释器通过扫描方法的参数,内部函数定义和内部变量定义等 创造了"),s("code",[t._v("executionContextObj")]),t._v(".这一系列的扫描最后转变成了"),s("code",[t._v("executionContextObj")]),t._v("中的"),s("code",[t._v("variableObject变量对象")]),t._v("属性")]),s("p",[t._v("解释器执行这个过程的伪过程大致如下:")]),s("ol",[s("li",[t._v("找到某些代码去调用一个方法")]),s("li",[t._v("在执行方法代码前,先创建这个方法的"),s("code",[t._v("执行上下文 execution context")])]),s("li",[t._v("进入"),s("code",[t._v("创建阶段 creation stage")]),s("ul",[s("li",[t._v("初始化作用域链")]),s("li",[t._v("创建"),s("code",[t._v("变量对象 variableObject")]),s("ul",[s("li",[t._v("创建"),s("code",[t._v("arguments 对象")]),t._v(":检查上下文中的参数,初始化他们的名称和值并且创建一个引用副本")]),s("li",[t._v("扫描函数声明的上下文:\n"),s("ul",[s("li",[t._v("对于每个找到的方法,在"),s("code",[t._v("变量对象 variableObject")]),t._v("中用其名称为其创建一个属性,这个属性包含了一个指向这个方法在内存中的引用指针")]),s("li",[t._v("如果方法名已经存在,则指针的值会被覆盖")])])]),s("li",[t._v("扫描变量声明的上下文:\n"),s("ul",[s("li",[t._v("对于每个找到的变量声明,同样以其名字在"),s("code",[t._v("变量对象 variableObject")]),t._v("为其创建一个变量,同时将其的值初始化为"),s("code",[t._v("undefined")])]),s("li",[t._v("如果变量名已经存在了,则什么都不做,继续扫描下一个")])])]),s("li",[t._v("定义在这个当前上下文中"),s("code",[t._v("this")]),t._v("的值")])])])])]),s("li",[t._v("进入"),s("code",[t._v("激活/代码执行阶段 Activation / Code Execution Stage")]),s("ul",[s("li",[t._v("在上下文中逐行 "),s("code",[t._v("运行/解释 Run/interpret")]),t._v(" 函数代码和变量赋值")])])])]),s("p",[t._v("示例:")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("foo")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{attrs:{class:"token function-variable function"}},[t._v("b")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("privateB")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("c")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{attrs:{class:"token function"}},[t._v("foo")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("22")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("当调用了"),s("code",[t._v("foo(22)")]),t._v("之后,"),s("code",[t._v("创建阶段 creation stage")]),t._v("看起来大概就是这样子:")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("fooExecutionContext "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    scopeChain"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    variableObject"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        arguments"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("22")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            length"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        i"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("22")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pointer to "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("c")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        a"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" undefined"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        b"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" undefined\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("如上所示,在"),s("code",[t._v("创建阶段")]),t._v(",只定义了变量名,并没有对他们赋值.\n当"),s("code",[t._v("赋值阶段")]),t._v("结束之后,执行流进入方法,方法执行完成之后, "),s("code",[t._v("激活/代码执行阶段")]),t._v("就变成了这样子的:")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("fooExecutionContext "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    scopeChain"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    variableObject"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        arguments"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("22")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            length"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        i"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("22")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pointer to "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("c")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        a"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        b"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pointer to "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("privateB")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("h2",{attrs:{id:"hoisting-关于提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hoisting-关于提升","aria-hidden":"true"}},[t._v("#")]),t._v(" Hoisting,关于提升")]),s("p",[t._v("网上有很多关"),s("code",[t._v("变量提升")]),t._v("的文章,解释了"),s("code",[t._v("提升")]),t._v("是什么:变量定义会被提升到方法作用域的顶部.但是,都没有解释为什么会发生提升.当理解了解释器如果创建 "),s("code",[t._v("activation object")]),t._v("后,就会明白为什么会发生提升了")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token function"}},[t._v("​")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" foo"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// function pointer")]),t._v("\n    console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" bar"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{attrs:{class:"token function-variable function"}},[t._v("bar")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'world'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("foo")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("​\n")])]),s("p",[t._v("现在我们可以回答一下问题:")]),s("ul",[s("li",[t._v("为什么我们可以在foo定义之前去访问它?\n"),s("ul",[s("li",[t._v("因为在"),s("code",[t._v("创建阶段")]),t._v(","),s("code",[t._v("激活/代码执行阶段")]),t._v("之前变量都已经被创建了,在代码开始运行的时候,foo已经在"),s("code",[t._v("activation object")]),t._v("中被定义了.是一个指针引用")])])]),s("li",[t._v("Foo被定义了两次,为什么foo显示的是"),s("code",[t._v("function")]),t._v("而不是"),s("code",[t._v("undefined")]),t._v("或者"),s("code",[t._v("string")]),s("ul",[s("li",[t._v("即便foo定义了两次,但是我们知道在"),s("code",[t._v("创建阶段")]),t._v("方法在变量之前被创建.所以当"),s("code",[t._v("var foo")]),t._v("被扫描到的时候foo已经存在,而且是一个指向function foo()的指针.所以在"),s("code",[t._v("创建阶段")]),t._v("变量处理的过程中,遇到已经定义的foo,js什么也不会做.")])])]),s("li",[t._v("为什么bar是undefined呢?\n"),s("ul",[s("li",[t._v("因为bar实际是一个变量,做了一次匿名函数的赋值,所以bar在"),s("code",[t._v("创建阶段")]),t._v("的时候以变量的方式处理,处理为"),s("code",[t._v("undefined")])])])])])])}],!1,null,null,null);n.default=o.exports}}]);