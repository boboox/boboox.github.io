(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{54:function(t,a,s){t.exports=s.p+"assets/img/handshake.111ed364.png"},81:function(t,a,s){"use strict";s.r(a);var r=[function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"瓶颈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#瓶颈","aria-hidden":"true"}},[t._v("#")]),t._v(" 瓶颈")]),r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#三次握手"}},[t._v("三次握手")])]),r("li",[r("a",{attrs:{href:"#流量控制-接收窗口"}},[t._v("流量控制(接收窗口)")])]),r("li",[r("a",{attrs:{href:"#慢启动-cwnd-拥塞窗口"}},[t._v("慢启动(cwnd,拥塞窗口)")]),r("ul",[r("li",[r("a",{attrs:{href:"#慢启动的影响"}},[t._v("慢启动的影响")])])])]),r("li",[r("a",{attrs:{href:"#队首阻塞"}},[t._v("队首阻塞")])]),r("li",[r("a",{attrs:{href:"#性能调优"}},[t._v("性能调优")]),r("ul",[r("li",[r("a",{attrs:{href:"#服务器配置调优"}},[t._v("服务器配置调优")])]),r("li",[r("a",{attrs:{href:"#应用程序调优"}},[t._v("应用程序调优")])])])])])]),r("p"),r("h2",{attrs:{id:"三次握手"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三次握手","aria-hidden":"true"}},[t._v("#")]),t._v(" 三次握手")]),r("p",[r("img",{attrs:{src:s(54),alt:"三次握手"}})]),r("p",[t._v("客户端可以在发送 ACK分组之后立即发送数据,而服务器必须等接收到ACK分组之后才能发送数据。这个启动通信的过程适用于所有 TCP 连接,因此对所有使用TCP的应用具有非常大的性能影响,"),r("strong",[t._v("每次传输应用数据之前,都必须经历一次完整的往返")])]),r("h2",{attrs:{id:"流量控制-接收窗口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#流量控制-接收窗口","aria-hidden":"true"}},[t._v("#")]),t._v(" 流量控制(接收窗口)")]),r("p",[t._v("rwnd是端到端的控制机制，预防发送过多的数据,TCP连接的每一方都会通告自己的接收窗口,其中包含能够保存数据的缓冲区空间大小信息。TCP 连接的整个生命周期:每个 ACK 分组都会携带相应的最新rwnd 值,以便两端动态调整数据流速,使之适应发送端和接收端的容量及处理能力")]),r("p",[t._v("窗口的值原来只有16位，即65535，所以以前rwnd的最大值不能超过64K。现在基本都有了“TCP 窗口缩放”(TCP Window Scaling)，把接收窗口大小由 65 535 字节提高到 1G 字节，在 Linux 中,可以通过如下命 令检查和启用窗口缩放选项:")]),r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[t._v("sysctl net.ipv4.tcp_window_scaling $"),r("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" sysctl -w net.ipv4.tcp_window_scaling"),r("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("1\n")])]),r("h2",{attrs:{id:"慢启动-cwnd-拥塞窗口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#慢启动-cwnd-拥塞窗口","aria-hidden":"true"}},[t._v("#")]),t._v(" 慢启动(cwnd,拥塞窗口)")]),r("p",[t._v("两端流量控制确实可以防止发送端向接收端过多发送数据,但却没有机制预防任何一端向潜在网络过多发送数据。换句话说,发送端和接收端在连接建立之初,谁也不知道可用带宽是多少,因此需要一个估算机制,"),r("strong",[t._v("然后根据网络中不断变化的条件 而动态改变速度:TCP能传输的最大数据 = MIN（rand,cwnd）")])]),r("h3",{attrs:{id:"慢启动的影响"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#慢启动的影响","aria-hidden":"true"}},[t._v("#")]),t._v(" 慢启动的影响")]),r("p",[t._v("无论带宽多大,每个 TCP 连接都必须经过慢 启动阶段。换句话说,我们不可能一上来就完全利用连接的最大带宽。")]),r("p",[t._v("慢启动导致客户端与服务器之间经过几百 ms 才能达到接近最大速度的问题,对于大型流式下载服务的影响不显著,因为慢启动的时间可以分摊到整个传输周期内消化掉。")]),r("h2",{attrs:{id:"队首阻塞"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#队首阻塞","aria-hidden":"true"}},[t._v("#")]),t._v(" 队首阻塞")]),r("p",[t._v("每个 TCP 分组都会带着一个唯一的序列号被发出,而 所有分组必须按顺序传送到接收端。如果中途有一个分组没能到达接收端,那么后续分组必须保存在接收端的TCP缓冲区,等待丢失的分组重发并到达接收端。这一切都发生在TCP层,应用程序对TCP重发和缓冲区中排队的分组一无所知,必须等待分组全部到达才能访问数据。在此之前,应用程序只能在通过套接字读数据时感觉到延迟交付。这种效应称为TCP的队首(HOL,Head of Line)阻塞")]),r("div",{staticClass:"tip custom-block"},[r("p",{staticClass:"custom-block-title"},[t._v("结果")]),r("p",[t._v("现代高速网络中 TCP 连接的数据传输速度,往往会受到接收端和发送端之 间往返时间的限制。另外,尽管带宽不断增长,但延迟依旧受限于光速,而且已经 限定在了其最大值的一个很小的常数因子之内。大多数情况下,TCP 的瓶颈都是延迟,而非带宽")])]),r("h2",{attrs:{id:"性能调优"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#性能调优","aria-hidden":"true"}},[t._v("#")]),t._v(" 性能调优")]),r("h3",{attrs:{id:"服务器配置调优"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#服务器配置调优","aria-hidden":"true"}},[t._v("#")]),t._v(" 服务器配置调优")]),r("ul",[r("li",[r("p",[t._v("增大TCP的初始拥塞窗口\n加大起始拥塞窗口可以让 TCP 在第一次往返就传输较多数据,而随后的速度提 升也会很明显。对于突发性的短暂连接,这也是特别关键的一个优化。")])]),r("li",[r("p",[t._v("慢启动重启\n在连接空闲时禁用慢启动可以改善瞬时发送数据的长 TCP 连接的性能。")])]),r("li",[r("p",[t._v("窗口缩放(RFC 1323)\n启用窗口缩放可以增大最大接收窗口大小,可以让高延迟的连接达到更好吞 吐量。")])]),r("li",[r("p",[t._v("TCP快速打开\n在某些条件下,允许在第一个 SYN 分组中发送应用程序数据。TFO(TCP Fast Open,TCP 快速打开)是一种新的优化选项,需要客户端和服务器共同支持。 为此,首先要搞清楚你的应用程序是否可以利用这个特性。")])])]),r("p",[t._v("以上几个设置再加上最新的内核,可以确保最佳性能:每个 TCP 连接都会具有较低 的延迟和较高的吞吐量。")]),r("h3",{attrs:{id:"应用程序调优"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应用程序调优","aria-hidden":"true"}},[t._v("#")]),t._v(" 应用程序调优")]),r("ul",[r("li",[r("p",[t._v("再快也快不过什么也不用发送,能少发就少发。")])]),r("li",[r("p",[t._v("我们不能让数据传输得更快,但可以让它们传输的距离更短。")])]),r("li",[r("p",[t._v("重用 TCP 连接是提升性能的关键")])])])])}],e=s(0),i=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},r,!1,null,null,null);a.default=i.exports}}]);