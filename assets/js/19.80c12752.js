(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{69:function(a,t,r){"use strict";r.r(t);var e=r(0),s=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("div",{staticClass:"content"},[r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#isarray"}},[a._v("isArray")])]),r("li",[r("a",{attrs:{href:"#栈方法"}},[a._v("栈方法")]),r("ul",[r("li",[r("a",{attrs:{href:"#push-pop"}},[a._v("push & pop")])])])]),r("li",[r("a",{attrs:{href:"#队列方法"}},[a._v("队列方法")]),r("ul",[r("li",[r("a",{attrs:{href:"#push-shift"}},[a._v("push & shift")])]),r("li",[r("a",{attrs:{href:"#unshift"}},[a._v("unshift")])])])]),r("li",[r("a",{attrs:{href:"#排序方法"}},[a._v("排序方法")]),r("ul",[r("li",[r("a",{attrs:{href:"#reverse-sort"}},[a._v("reverse & sort")])])])]),r("li",[r("a",{attrs:{href:"#操作方法"}},[a._v("操作方法")]),r("ul",[r("li",[r("a",{attrs:{href:"#concat"}},[a._v("concat")])]),r("li",[r("a",{attrs:{href:"#slice"}},[a._v("slice")])]),r("li",[r("a",{attrs:{href:"#splice-牛逼的方法"}},[a._v("splice (牛逼的方法)")])])])]),r("li",[r("a",{attrs:{href:"#位置方法"}},[a._v("位置方法")]),r("ul",[r("li",[r("a",{attrs:{href:"#indexof"}},[a._v("indexOf")])]),r("li",[r("a",{attrs:{href:"#lastindexof"}},[a._v("lastIndexOf")])])])]),r("li",[r("a",{attrs:{href:"#迭代方法"}},[a._v("迭代方法")]),r("ul",[r("li",[r("a",{attrs:{href:"#every"}},[a._v("every")])]),r("li",[r("a",{attrs:{href:"#filter"}},[a._v("filter")])]),r("li",[r("a",{attrs:{href:"#foreach"}},[a._v("forEach")])]),r("li",[r("a",{attrs:{href:"#map"}},[a._v("map")])]),r("li",[r("a",{attrs:{href:"#some"}},[a._v("some")])])])]),r("li",[r("a",{attrs:{href:"#归并方法"}},[a._v("归并方法")]),r("ul",[r("li",[r("a",{attrs:{href:"#reduce"}},[a._v("reduce")])]),r("li",[r("a",{attrs:{href:"#reduceright"}},[a._v("reduceRight")])])])])])]),r("p"),r("h1",{attrs:{id:"es6-array"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es6-array","aria-hidden":"true"}},[a._v("#")]),a._v(" es6 Array")]),r("p",[r("code",[a._v("Array")]),a._v("可以说是除了"),r("code",[a._v("Object")]),a._v("之外js中最常用的数据类型")]),r("p",[a._v("而且它与其他语言的数组有着相当大的区别")]),r("ul",[r("li",[a._v("没有固定的数据类型")]),r("li",[a._v("没有固定的长度,可以动态调整")])]),r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a "),r("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),r("span",{attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),r("span",{attrs:{class:"token class-name"}},[a._v("Array")]),r("span",{attrs:{class:"token punctuation"}},[a._v("(")]),r("span",{attrs:{class:"token number"}},[a._v("10")]),r("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),r("p",[a._v("初始化数组的一个方式,\n这会定义一个length为10的数组")]),r("div",{staticClass:"tip custom-block"},[r("p",{staticClass:"custom-block-title"},[a._v("注意")]),r("p",[a._v("array.length并不是只读的,设置length将会改变array的长度和元素")])]),r("h2",{attrs:{id:"isarray"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#isarray","aria-hidden":"true"}},[a._v("#")]),a._v(" isArray")]),r("p",[a._v("在同一个全局执行环境下 使用"),r("code",[a._v("instanceof")]),a._v("就可以得到满意的结果")]),r("p",[a._v("但是当存在两个或者多个全局执行环境的情况下(如iframe),当一个框架中的array对象传入另一个执行环境时,")]),r("p",[a._v("两个环境中"),r("code",[a._v("Array")]),a._v("构造函数版本不同.会导致"),r("code",[a._v("instanceof")]),a._v("的判断为false")]),r("p",[a._v("所以ES6提供了Array.isArray()方法来判断")]),r("h2",{attrs:{id:"栈方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#栈方法","aria-hidden":"true"}},[a._v("#")]),a._v(" 栈方法")]),r("h3",{attrs:{id:"push-pop"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#push-pop","aria-hidden":"true"}},[a._v("#")]),a._v(" push & pop")]),r("p",[a._v("数组也提供了类似于栈一样的操作方法,LIFO,先进后出")]),r("ul",[r("li",[a._v("进栈"),r("code",[a._v("push")]),a._v(","),r("code",[a._v("push")]),a._v("可以接受任意数量的参数,把他们逐个添加到数组末尾,并返回修改后数组的长度")]),r("li",[a._v("出栈"),r("code",[a._v("pop")]),a._v(","),r("code",[a._v("pop")]),a._v("则移除数组末尾最后一项,减少数组长度,并返回被移除的项.")])]),r("h2",{attrs:{id:"队列方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#队列方法","aria-hidden":"true"}},[a._v("#")]),a._v(" 队列方法")]),r("h3",{attrs:{id:"push-shift"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#push-shift","aria-hidden":"true"}},[a._v("#")]),a._v(" push & shift")]),r("p",[a._v("数组同样提供了类似队列的操作方法,FIFO,先进先出")]),r("ul",[r("li",[a._v("进队列"),r("code",[a._v("push")]),a._v(",同上")]),r("li",[a._v("出队列"),r("code",[a._v("shift")]),a._v(",从数组列表的头部移除一个项并返回该项")])]),r("h3",{attrs:{id:"unshift"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#unshift","aria-hidden":"true"}},[a._v("#")]),a._v(" unshift")]),r("p",[a._v("ECMAScript 还为数组提供了"),r("code",[a._v("unshift")]),a._v("方法,顾名思义,与"),r("code",[a._v("shift")]),a._v("方法相反,\n该方法从数组的前部添加任意数量的项并返回新的数组长度,")]),r("p",[a._v("所以使用"),r("code",[a._v("unshift")]),a._v("与"),r("code",[a._v("pop")]),a._v("可以模拟一个反方向的队列操作")]),r("h2",{attrs:{id:"排序方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#排序方法","aria-hidden":"true"}},[a._v("#")]),a._v(" 排序方法")]),r("h3",{attrs:{id:"reverse-sort"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#reverse-sort","aria-hidden":"true"}},[a._v("#")]),a._v(" reverse & sort")]),r("p",[a._v("数组中已有两个直接可以用来排序的方法:"),r("code",[a._v("reverse")]),a._v("与"),r("code",[a._v("sort")])]),r("p",[r("code",[a._v("reverse")]),a._v("可以用来反转组数顺序\n"),r("code",[a._v("sort")]),a._v("方法默认情况下会调用每个数组项的toString()方法,得到每个项的字符串表达后再进行排序.")]),r("p",[r("code",[a._v("sort")]),a._v("方法可以接收一个自定义的比较函数,会传入当前比较的两个值,通过判断返回值来确定该两个项的顺序")]),r("ul",[r("li",[a._v("0 :表示两个值相等")]),r("li",[a._v("1 :表示第一个参数应该在第二个参数之后")]),r("li",[a._v("-1:表示第一个参数应该在第二个参数之前")])]),r("h2",{attrs:{id:"操作方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#操作方法","aria-hidden":"true"}},[a._v("#")]),a._v(" 操作方法")]),r("h3",{attrs:{id:"concat"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#concat","aria-hidden":"true"}},[a._v("#")]),a._v(" concat")]),r("p",[a._v("常用的拼接数组的方法"),r("code",[a._v("concat")]),a._v(",\nconcat方法会创建当前数组的一个副本,然后将参数添加到副本的结尾并返回该副本")]),r("div",{staticClass:"tip custom-block"},[r("p",{staticClass:"custom-block-title"},[a._v("注意")]),r("p",[a._v("该方法不会改变原来的数组")])]),r("h3",{attrs:{id:"slice"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#slice","aria-hidden":"true"}},[a._v("#")]),a._v(" slice")]),r("p",[a._v("下一个常用方法"),r("code",[a._v("slice")]),r("code",[a._v("slice")]),a._v("方法可以基于当前数组中的一项或者多项创建一个新的数组,\n"),r("code",[a._v("slice")]),a._v("方法接受1个或者2个参数,即返回项的起始和结束位置.")]),r("p",[a._v("在只有起始位置的时候,结束位置为数组的末尾,\n在只有结束位置的时候,起始位置为数组的开始\n当起始位置和结束位置都有的时候,返回起始位置和结束位置之间的项目,但是不包含结束位置.")]),r("div",{staticClass:"tip custom-block"},[r("p",{staticClass:"custom-block-title"},[a._v("注意")]),r("p",[a._v("该方法不会改变原来的数组")])]),r("div",{staticClass:"warning custom-block"},[r("p",{staticClass:"custom-block-title"},[a._v("特殊")]),r("p",[a._v("slice的两个参数可以包含负数,当参数是负数的时候,需要加上数组长度来确定最终值,当最终起始位置如果大于结束位置则会返回空数组")])]),r("h3",{attrs:{id:"splice-牛逼的方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#splice-牛逼的方法","aria-hidden":"true"}},[a._v("#")]),a._v(" splice (牛逼的方法)")]),r("p",[a._v("splice方法可以说是数组方法中最强大的方法了.它有很多种用法,主要用途是向数组的中部插入项目")]),r("ul",[r("li",[r("strong",[a._v("删除")]),a._v("\n可以删除任意数量的项目,只需要指定2个参数:要删除的"),r("code",[a._v("第一项的位置")]),a._v("和要删除的"),r("code",[a._v("项数")]),a._v("\n例如:splice(0,2)会删除数组的前两项")]),r("li",[r("strong",[a._v("插入")]),a._v("\n可以在指定位置插入任意数量的项,只需要传入:起始位置,0(删除的项数),要插入的项1,项2 ...\n例如:splice(2,0,'a','b'),会在2的位置后插入a,b两项")]),r("li",[r("strong",[a._v("替换")]),a._v("\n替换则是在插入的基础上,将删除数量改为需要删除或者替换的数量,当删除数量与插入数量一致是,相当于替换功能")])]),r("div",{staticClass:"tip custom-block"},[r("p",{staticClass:"custom-block-title"},[a._v("注意")]),r("p",[a._v("该方法会改变原来的数组,并且每次都会返回被剔除的项目的数组,如果没有删除任何项,则返回空数组")])]),r("h2",{attrs:{id:"位置方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#位置方法","aria-hidden":"true"}},[a._v("#")]),a._v(" 位置方法")]),r("h3",{attrs:{id:"indexof"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#indexof","aria-hidden":"true"}},[a._v("#")]),a._v(" indexOf")]),r("p",[r("code",[a._v("indexOf")]),a._v("方法提供了两个参数,要查找的项和起始查找位置(默认0),返回第一个匹配项在数组中的位置,找不到返回-1")]),r("p",[a._v("如果给了位置参数,在该位置之后匹配不到项则一样返回-1")]),r("p",[a._v("例如:array.indexOf(5,5)")]),r("h3",{attrs:{id:"lastindexof"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#lastindexof","aria-hidden":"true"}},[a._v("#")]),a._v(" lastIndexOf")]),r("p",[r("code",[a._v("lastIndexOf")]),a._v("与"),r("code",[a._v("indexOf")]),a._v("不同的是,它从数组末尾开始往前查找,")]),r("p",[a._v("方法提供了两个参数,要查找的项和起始查找位置(默认末尾),返回第一个匹配项在数组中的位置,找不到返回-1")]),r("p",[a._v("如果给了位置参数,在该位置开始往前,匹配不到项则一样返回-1")]),r("p",[a._v("例如:array.lastIndexOf(5,5)")]),r("h2",{attrs:{id:"迭代方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#迭代方法","aria-hidden":"true"}},[a._v("#")]),a._v(" 迭代方法")]),r("p",[a._v("所有迭代方法都不会改变原有数组")]),r("h3",{attrs:{id:"every"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#every","aria-hidden":"true"}},[a._v("#")]),a._v(" every")]),r("p",[a._v("对数组中的每一项运行给定函数,如果该函数对每一项都返回true,则返回true")]),r("h3",{attrs:{id:"filter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#filter","aria-hidden":"true"}},[a._v("#")]),a._v(" filter")]),r("p",[a._v("对数组中的每一项运行给定函数,返回该函数会返回true的项组成的数组")]),r("h3",{attrs:{id:"foreach"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#foreach","aria-hidden":"true"}},[a._v("#")]),a._v(" forEach")]),r("p",[a._v("对数组中的每一项运行给定函数,无返回值")]),r("h3",{attrs:{id:"map"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#map","aria-hidden":"true"}},[a._v("#")]),a._v(" map")]),r("p",[a._v("对数组中的每一项运行给定函数,返回每次函数调用结果组成的数组")]),r("h3",{attrs:{id:"some"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#some","aria-hidden":"true"}},[a._v("#")]),a._v(" some")]),r("p",[a._v("对数组中的每一项运行给定函数,任何一项运算结果为true则返回true")]),r("h2",{attrs:{id:"归并方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#归并方法","aria-hidden":"true"}},[a._v("#")]),a._v(" 归并方法")]),r("h3",{attrs:{id:"reduce"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#reduce","aria-hidden":"true"}},[a._v("#")]),a._v(" reduce")]),r("p",[r("code",[a._v("reduce")]),a._v("归并方法会迭代所有数组项,然后构建最终返回的值.")]),r("p",[a._v("接受两个参数:在每一个项上调用的函数与(可选)作为归并基础的初始值")]),r("p",[a._v("这个函数接受4个参数,分别是:前一个函数执行返回值(初始值),当前值,当前索引,数组")]),r("div",{staticClass:"tip custom-block"},[r("p",{staticClass:"custom-block-title"},[a._v("注意")]),r("p",[a._v("当未给定初始值的时候,第一次递归的初始值为数组第一个元素,当前值为第二个元素")])]),r("h3",{attrs:{id:"reduceright"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#reduceright","aria-hidden":"true"}},[a._v("#")]),a._v(" reduceRight")]),r("p",[r("code",[a._v("reduceRight")]),a._v("与"),r("code",[a._v("reduce")]),a._v("的区别在于它是从数组末尾开始往前递归")])])}],!1,null,null,null);t.default=s.exports}}]);